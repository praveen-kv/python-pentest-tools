#!/usr/bin/env python
import os
import sys
import time
import subprocess

client_name = raw_input("Enter Client Name Without Space: ")
client_file_name = raw_input("Enter File Name Without Space: ")

filepath = os.path.join(client_file_name)

dir1 = "/home/"
dir2 = "/Scanned_Output/"

ssl_path1 = "Filepath/filename"

def func_sh_nmap_cmd(payload,f_name):
	filepath1 = os.path.join(os.getcwd(),'nmap_sh_cmd.sh')
	f1 = open(filepath1,'a')
	with open(filepath) as f:
		content123 = f.readlines()
		for lines in content123:
			strip_l = lines.rstrip()
			dir4 = "/Nmap_Results/"		
			dir3 = dir1+dir2+client_name+dir4
			if not os.path.exists(dir3):
				os.makedirs(dir3)
			data1 = payload+strip_l+" -Pn -oA "+dir3+f_name+strip_l			
			f1.write(data1)
			f1.write("\n")
		f1.close()

def func_nmap_host_cmd(payload):
	filepath1 = os.path.join(os.getcwd(),'nmap_sh_cmd.sh')
	f1 = open(filepath1,'a')
	dir4 = "/Nmap_Results/"
	dir3 = dir1+dir2+client_name+dir4
	if not os.path.exists(dir3):
		os.makedirs(dir3)
	data1 = payload+" -oN "+dir3+"Host_up.txt"
	f1.write(data1)
	f1.write("\n")
	f1.close()
	
def func_sh_ssl_scan():
	filepath1 = os.path.join(os.getcwd(),'sh_ssl_scan.sh')	
	f1 = open(filepath1,'w')
	with open(filepath) as f:
		content123 = f.readlines()
		for lines in content123:
			strip_l = lines.rstrip()			
			dir7 = "/SSL_Scan_Results/"
			dir3 = dir1+dir2+client_name+dir7
			if not os.path.exists(dir3):
				os.makedirs(dir3)
			dir4 = dir3.replace(" ", "\ ")			
			# data1 = ssl_path1+" --xml="+dir4+"SSL_Scan_"+strip_l+".xml "+strip_l # Package based execution
			data1 = "./sslscan --xml="+dir4+"SSL_Scan_"+strip_l+".xml "+strip_l # Installation based execution
			f1.write(data1)
			f1.write("\n")
		f1.close()

choice1 = 0

while int(choice1) not in range(1,4):
	choice1 = raw_input('''
	1. Nmap
	2. SSL Scan
	3. Exit
	Enter your choice: ''')

choice1 = int(choice1)

if choice1 == 1:
	continue_string = True
	def func_nmap_scan():
		choice2 = 0
		while  int(choice2) not in range(1,8):
			choice2 = raw_input('''
			1. Discovery Scan
			2. Vulnerability Scan
			3. TCP Scan
			4. UDP Scan
			5. Poodle Scan
			6. Check Host is up
			7. Exit from Nmap Scan
			Enter your choice: ''')

		choice2 = int(choice2)

		if choice2 == 1:
			payload = "nmap -sV -sC --script=discovery -p 1-65535 "
			f_name = "Discovery_"
			func_sh_nmap_cmd(payload,f_name)
			print "Discovery Script is loaded into Automation Script"

		elif choice2 == 2:
			payload = "nmap -sV -sC --script=vuln -p 1-65535 "
			f_name = "Vulnerability_"			
			func_sh_nmap_cmd(payload,f_name)
			print "Vulnerability Script is loaded into Automation Script"			

		elif choice2 == 3:
			payload = "nmap -sT -p 1-65535 "
			f_name = "TCP_"			
			func_sh_nmap_cmd(payload,f_name)
			print "TCP Script is loaded into Automation Script"			

		elif choice2 == 4:
			payload = "sudo nmap -sU "
			f_name = "UDP_"			
			func_sh_nmap_cmd(payload,f_name)
			print "UDP Script is loaded into Automation Script"

		elif choice2 == 5:
			payload = "nmap --script ssl-poodle -p 443 "
			f_name = "Poodle_"			
			func_sh_nmap_cmd(payload,f_name)
			print "Poodle Script is loaded into Automation Script"

		elif choice2 == 6:
			payload = "nmap -sP -iL "+client_file_name+" -Pn"
			f_name = "Host_Up_"			
			func_nmap_host_cmd(payload)
			print "Host Up Script is loaded into Automation Script"

		elif choice1 == 7:
			sys.exit()

	func_nmap_scan()

	while continue_string:
		new_data = raw_input("Would you like to run other Nmap Scripts (y/n)...??")
		if new_data == "y" or new_data == "Y":
			func_nmap_scan()
		elif new_data == "n" or new_data == "N":
			continue_string = False
		else:
			break

elif choice1 == 2:
	func_sh_ssl_scan()

elif choice1 == 3:
	sys.exit()

dir5 = os.getcwd()+'/nmap_sh_cmd.sh'
dir6 = os.getcwd()+'/sh_ssl_scan.sh'
dir8 = "/Nmap_Results/"
dir3 = dir1+dir2+client_name+dir8+"Host_up.txt"
dir9 = dir1+dir2+client_name+dir8+"Host_is_not_up.txt"

if os.path.exists(dir5):
	command = ['chmod', '+x', 'nmap_sh_cmd.sh']
	subprocess.Popen(command)
	time.sleep(1)
	os.system('./nmap_sh_cmd.sh')
	time.sleep(2)
	os.system('rm -r nmap_sh_cmd.sh')
	
elif not os.path.exists(dir5):
	print "Nmap Automation Script not found"

if os.path.exists(dir6):
	command = ['chmod', '+x', 'sh_ssl_scan.sh']
	subprocess.Popen(command)
	time.sleep(1)
	os.system('./sh_ssl_scan.sh')
	time.sleep(2)
	os.system('rm -r sh_ssl_scan.sh')

elif not os.path.exists(dir6):
	print "SSL Scan Automation Script not found"


if os.path.exists(dir3):
	filepath2 = dir9
	f3 = open(filepath2,'w')	
	with open(dir3, 'r') as f2:
		content123 = f2.readlines()
		for lines in content123:
			strip_l = lines.rstrip()
			if "Failed to resolve" in strip_l:
				f3.write(strip_l)
				f3.write("\n")				
			f3.close
else:
	pass
